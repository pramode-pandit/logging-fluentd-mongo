#
# Simple implementation of mongo DB with 1 statefulset. 
# User Credentials are stored in secret with persistence storage.
# Mongo relica is NOT available in this setup with data sync
#
---
apiVersion: v1
kind: Namespace
metadata:
  name: mongo
---
apiVersion: v1
kind: Secret
metadata:
  name: k8-cred-secret
  namespace: mongo
type: Opaque
data:
  MONGO_ROOT_USERNAME: YWRtaW4K
  MONGO_ROOT_PASSWORD: cGFzc3dvcmQK
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-standalone
  namespace: mongo
  labels:
    app: mongo-standalone
spec:
  clusterIP: None
  selector:
    app: mongo-standalone
  ports:
  - port: 27017
    name: mongo
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-standalone
  namespace: mongo
spec:
  serviceName: mongo-standalone
  replicas: 1
  selector:
    matchLabels:
      app: mongo-standalone
  template:
    metadata:
      labels:
        app: mongo-standalone
    spec:
      containers:
      - name: mongodb-standalone
        image: mongo:4.0.8
        env:
          - name: MONGO_INITDB_ROOT_USERNAME_FILE
            value: /etc/k8-cred/admin/MONGO_ROOT_USERNAME
          - name: MONGO_INITDB_ROOT_PASSWORD_FILE
            value: /etc/k8-cred/admin/MONGO_ROOT_PASSWORD
        volumeMounts:
        - name: k8-cred
          mountPath: /etc/k8-cred
          readOnly: true
        - name: k8-data
          mountPath: /data/db
      volumes:
      - name: k8-cred
        secret:
          secretName: k8-cred-secret
          items:
          - key: MONGO_ROOT_USERNAME
            path: admin/MONGO_ROOT_USERNAME
            mode: 0444
          - key: MONGO_ROOT_PASSWORD
            path: admin/MONGO_ROOT_PASSWORD
            mode: 0444
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: mongo-standalone
      name: k8-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: nfs-storageclass
      volumeMode: Filesystem